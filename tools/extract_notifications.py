notification_str = """
[Union(0, typeof(AllianceConstructsFobGlobalNotification))]
[Union(1, typeof(YouHaveSabotagedAStationNotification))]
[Union(2, typeof(YouHaveSabotagedAnOutpostNotification))]
[Union(3, typeof(YouHaveAttackedAStationNotification))]
[Union(4, typeof(UnitProductionInterruptedNotification))]
[Union(5, typeof(TutorialSequenceNotification))]
[Union(6, typeof(TutorialAchievementProgressedNotification))]
[Union(7, typeof(TutorialAchievementCompletedNotification))]
[Union(8, typeof(SupplyCacheReceivedNotification))]
[Union(9, typeof(StationWarehouseFullNotification))]
[Union(10, typeof(StationOutOfSupplyNotification))]
[Union(11, typeof(StationHasBeenSabotagedNotification))]
[Union(12, typeof(StationHasBeenDestroyedNotification))]
[Union(13, typeof(StationHasBeenAttackedNotification))]
[Union(14, typeof(SolarFlareFinishedBySomeoneNotification))]
[Union(15, typeof(SolarFlareExpiredNotification))]
[Union(16, typeof(SolarFlareDiscoveredNotification))]
[Union(17, typeof(ResourceStreamInterruptedNotification))]
[Union(18, typeof(ProgressRewardUnlockedNotification))]
[Union(19, typeof(PremiumTimeExpiringSoonNotification))]
[Union(20, typeof(PolicyUpgradeCompletedNotification))]
[Union(21, typeof(PolicyCanBeUpgradedNotification))]
[Union(22, typeof(PlayerAppliedToAllianceNotification))]
[Union(23, typeof(PinnedNotification))]
[Union(24, typeof(PinnedDailyChallengeProgressedNotification))]
[Union(25, typeof(PinnedAchievementProgressedNotification))]
[Union(26, typeof(OutpostHasBeenSabotagedNotification))]
[Union(27, typeof(OneOfYourStationsHasBeenSpiedNotification))]
[Union(28, typeof(NewWelcomeRewardCanBeClaimedNotification))]
[Union(29, typeof(NewDailyChallengesAvailableNotification))]
[Union(30, typeof(MissionCacheReceivedNotification))]
[Union(31, typeof(MemberLeavesAllianceNotification))]
[Union(32, typeof(MemberKickedFromAllianceNotification))]
[Union(33, typeof(MemberJoinsAllianceNotification))]
[Union(34, typeof(IncomingSabotageNotification))]
[Union(35, typeof(IncomingAttackNotification))]
[Union(36, typeof(FobJumpedNotification))]
[Union(37, typeof(FobIsJumpingNotification))]
[Union(38, typeof(FobDestroyedNotification))]
[Union(39, typeof(FobBuiltNotification))]
[Union(40, typeof(FobBuildScheduledNotification))]
[Union(41, typeof(EmptyBuildingQueueNotification))]
[Union(42, typeof(EmpireEventsAvailableNotification))]
[Union(43, typeof(EmpireEventCacheReceivedNotification))]
[Union(44, typeof(DailyRewardsUnlockedNotification))]
[Union(45, typeof(DailyChallengeCompletedNotification))]
[Union(46, typeof(DailyChallengeCacheReceivedNotification))]
[Union(47, typeof(AllianceUpgradesOuterShellGlobalNotification))]
[Union(48, typeof(AllianceStationBuildScheduledNotification))]
[Union(49, typeof(AllianceMovementScheduledNotification))]
[Union(50, typeof(AllianceMovementCompletedNotification))]
[Union(51, typeof(AllianceMovementCancelledNotification))]
[Union(52, typeof(AllianceLostDysonSphereGlobalNotification))]
[Union(53, typeof(AllianceLosesGtNotification))]
[Union(54, typeof(AllianceLeavesCoalitionNotification))]
[Union(55, typeof(AllianceLeavesCoalitionGlobalNotification))]
[Union(56, typeof(AllianceJoinsCoalitionNotification))]
[Union(57, typeof(AllianceJoinsCoalitionGlobalNotification))]
[Union(58, typeof(AllianceFobDestroyedGlobalNotification))]
[Union(59, typeof(AllianceCapturesGtNotification))]
[Union(60, typeof(AllianceCapturedGtGlobalNotification))]
[Union(61, typeof(AllianceCapturedDysonSphereGlobalNotification))]
[Union(62, typeof(AllianceBuildsAllianceStationNotification))]
[Union(63, typeof(AchievementCompletedNotification))]
[Union(64, typeof(PersistentNotification))]
[Union(65, typeof(CachePersistentNotification))]
[Union(66, typeof(RewardDepositedNotification))]
[Union(67, typeof(EmpireCapturedGtNotification))]
[Union(68, typeof(EmpireLosesGtNotification))]
"""

lines = notification_str.strip().split("\n")


ts_enum = 'export enum PersistentNotificationType {\n'
for line in lines:
    notif_name = line.split('typeof(')[1].split(')')[0]
    notif_typename = 'Starborne.ClientObjects.Notifications.'+notif_name + ', Starborne.Server'
    ts_enum += '    %s = "%s", \n' % (notif_name, notif_typename)
ts_enum += '}\n'

f = open('PersistentNotificationType.tsx', 'w')
f.write(ts_enum)
f.close()
